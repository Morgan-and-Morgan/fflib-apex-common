<project name="mm-fflib-apex-common"
    xmlns:sf="antlib:com.salesforce">

    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="main.src.dir" value="${basedir}/fflib/src"/>

    <path id="project-level-ant-tasks.classpath">
        <fileset dir="lib" />
    </path>

    <!-- Salesforce ANT jar -->
    <property name="salesforce.ant.jar.filepath" value="${lib.dir}/ant-salesforce-40.0.jar" />

    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="${salesforce.ant.jar.filepath}" />
        </classpath>
    </taskdef>

    <import file="${lib.dir}/base-functions.xml"/>

    <!-- ANT Contrib Tasks jar -->
    <property name="ant.contrib.jar.filepath" value="${lib.dir}/ant-contrib-1.0b3.jar" />

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant.contrib.jar.filepath}" />
        </classpath>
    </taskdef>

    <property name="destructive-changes-folder-name" value="src-metadata-deletes" />

    <property name="build-properties-file-name" value="local.build.properties" />
    <property name="build-properties-file" value="${basedir}/${build-properties-file-name}" />

    <property file="${build-properties-file}"/>

    <condition property="sf.source.username" value=""> <not> <isset property="sf.source.username"/> </not> </condition>
    <condition property="sf.source.password" value=""> <not> <isset property="sf.source.password"/> </not> </condition>
    <condition property="sf.source.securityToken" value=""> <not> <isset property="sf.source.securityToken"/> </not> </condition>

    <target name="deploy-src"  description="Deploys the contents of src package">
        <antcall target="abstract-deploy-source">
            <param name="working.base.dir" value="${main.src.dir}" />
        </antcall>
    </target>

    <target name="generate.local.properties" description="">
        <delete file="${build-properties-file}" />
        <echo></echo>
        <echo>Creating a new ${build-properties-file-name} at the project root.  Please edit the file with credentials in order to perform a deployment.</echo>
        <echo></echo>
        <echo file="${build-properties-file}" append="false"># ${build-properties-file-name}${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">#${line.separator}</echo>
        <echo file="${build-properties-file}" append="true"># Specify the login credentials for the desired Salesforce organization${line.separator}</echo>
        <echo file="${build-properties-file}" append="true"># Use 'https://www.salesforce.com' for production or developer edition (the default if not specified).${line.separator}</echo>
        <echo file="${build-properties-file}" append="true"># Use 'https://test.salesforce.com for sandbox.${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.source.username=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.source.password=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.source.securityToken=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.source.serverurl=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">org.wide.email.address=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.target.username=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.target.password=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.target.securityToken=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">sf.target.serverurl=${line.separator}</echo>
        <echo file="${build-properties-file}" append="true">${line.separator}</echo>
    </target>

    <target name="retrieve-src" description="Retrieves the contents specified in the src package">

        <move file="${main.src.dir}/package.xml" tofile="${basedir}/package.xml" />
        <delete dir="${main.src.dir}" failonerror="true"/>
        <mkdir dir="${main.src.dir}"/>
        <move file="${basedir}/package.xml" tofile="${main.src.dir}/package.xml" />

        <antcall target="abstract-retrieve-source">
            <param name="working.base.dir" value="${main.src.dir}"/>
        </antcall>
    </target>

    <target name="validate-deploy-src" description="Validates the deploy of the src package">
        <antcall target="abstract-validate-source">
            <param name="working.base.dir" value="${main.src.dir}" />
        </antcall>
    </target>
</project>